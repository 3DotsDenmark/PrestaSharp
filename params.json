{"name":"PrestaSharp","tagline":"CSharp .Net client library for the PrestaShop API via web service","body":"#PrestaSharp\r\n###CSharp .Net client library for the PrestaShop API via web service\r\n\r\n##Introduction\r\nA simple .Net REST client written in C# for the Prestashop API.\r\nPrestaSharp uses the RestSharp library to consume the Prestashop services.\r\n\r\n##Basic usage\r\n1) Initiate a client instance:\r\n\r\n```\r\n\tstring BaseUrl = \"http://www.myweb.com/api\";\r\n\tstring Account = \"ASDLKJOIQWEPROQWUPRPOQPPRQOW\";\r\n\tstring Password = \"\";\r\n\tManufacturerFactory ManufacturerFactory = new ManufacturerFactory(BaseUrl, Account, Password);\r\n```\r\n\r\n2) Perform CRUD actions through the client:\r\n\r\n```\r\n\tBukimedia.PrestaSharp.Entities.manufacturer Manufacturer = ManufacturerFactory.Get(6);\r\n\tManufacturer.name = \"Iron Maiden\";\r\n\tManufacturer.active = 1;        \r\n\tManufacturerFactory.Add(Manufacturer);\r\n\tManufacturerFactory.Update(Manufacturer);\r\n\tManufacturerFactory.Delete(Manufacturer);\r\n```\r\n\r\n3) Add an image:\r\n\r\n```\r\n\tBukimedia.PrestaSharp.Entities.product MyProduct = new Bukimedia.PrestaSharp.Entities.product()\r\n\tMyProduct = ProductFactory.Add(MyProduct)\r\n\tImageFactory.AddProductImage((long)MyProduct.id, \"C:\\\\MyImage.jpg\");\r\n```\r\n\r\n##Advanced usage\r\n1) Get all. This sample retrieves the list of manufacturers:\r\n\r\n```\r\n\tList<manufacturer> manufacturers = ManufacturerFactory.GetAll();\r\n```\r\n\r\n2) Get ids. This sample retrieves the list of the manufacturer ids:\r\n\r\n```\r\n\tList<long> ids = ManufacturerFactory.GetIds();\r\n```\r\n\r\n3) Get by filter. This sample retrieves the list of manufacturers which name is \"Metallica\":\r\n\r\n```\r\n\tDictionary<string, string> dtn = new Dictionary<string, string>();\r\n\tdtn.Add(\"name\", \"Metallica\");\r\n\tList<manufacturer> manufacturers = ManufacturerFactory.GetByFilter(dtn, null, null);\r\n```\r\n\r\n4) Get by filter with wildcards. This sample retrieves the manufacturers which name starts with \"Metall\":\r\n\r\n```\r\n\tDictionary<string, string> dtn = new Dictionary<string, string>();\r\n\tdtn.Add(\"name\", \"[Metall]%\");\r\n\tList<manufacturer> manufacturers = ManufacturerFactory.GetByFilter(dtn, null, null);\r\n```\r\n\r\n5) Get ids by filter. This sample retrieves the list of the manufacturers ids which name is \"Metallica\":\r\n\r\n```\r\n\tDictionary<string, string> dtn = new Dictionary<string, string>();\r\n\tdtn.Add(\"name\", \"Metallica\");\r\n\tList<long> ids = ManufacturerFactory.GetIdsByFilter(dtn, null, null);\r\n```\r\n\r\n6) Get ids by filter with wildcards. This sample retrieves the list of the manufacturers ids which name starts with \"Metall\":\r\n\r\n```\r\n\tDictionary<string, string> dtn = new Dictionary<string, string>();\r\n\tdtn.Add(\"name\", \"[Metall]%\");\r\n\tList<long> ids = ManufacturerFactory.GetIdsByFilter(dtn, null, null);\r\n```\r\n\r\n7) Get by complex filter. This sample retrieves the top five manufacturers in ascendent sorting which name starts with \"Metall\":\r\n\r\n```\r\n\tDictionary<string, string> dtn = new Dictionary<string, string>();\r\n\tdtn.Add(\"name\", \"[Metall]%\");\r\n\tList<manufacturer> manufacturers = ManufacturerFactory.GetByFilter(dtn, \"name_ASC\", \"5\");\r\n```\r\n\r\n8) Get by filter for pagination. This sample retrieves the top five manufacturers from tenth position in ascendent sorting which name starts with \"Metall\":\r\n\r\n```\r\n\tDictionary<string, string> dtn = new Dictionary<string, string>();\r\n\tdtn.Add(\"name\", \"[Metall]%\");\r\n\tList<manufacturer> manufacturers = ManufacturerFactory.GetByFilter(dtn, \"name_ASC\", \"[9,5]\");\r\n```\r\n\r\n##Supported resources\r\n- Address\r\n- Carriers\r\n- Carts\r\n- Categories\r\n- Combinations\r\n- Currencies\r\n- Customers\r\n- Guests\r\n- Groups\r\n- Images\r\n- Languages\r\n- Manufacturers\r\n- Orders\r\n- Order States\r\n- Products\r\n- Product Features\r\n- Product Feature Values\r\n- Product Options\r\n- Product Option Values\r\n- Shops\r\n- Specific Prices\r\n- Stock Availables\r\n- Tags\r\n- Tax Rule Groups\r\n- Zones\r\n\r\n##Supported actions\r\n- Create\r\n- Read\r\n- Update\r\n- Delete\r\n\r\n##Roadmap\r\n- Add other resources\r\n\r\n##License\r\nPrestaSharp is GNU General Public License (GPL)\r\n\r\nThis program is distributed in the hope that it will be useful, but without any warranty; without even the implied warranty of merchantabilty or fitness for a particular purpose. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.\r\n\r\nCopyright (C) 2014 Bukimedia\r\n- Bukimedia: http://www.bukimedia.com/\r\n- Twitter: http://twitter.com/bukimedia\r\n- GitHub: https://github.com/bukimedia","google":"UA-47904802-2","note":"Don't delete this file! It's used internally to help with page regeneration."}